#!/usr/bin/env node

const { execSync } = require('child_process');

console.log('üîç Test de configuration Firebase Functions\n');

try {
  // 1. V√©rifier si Firebase CLI est install√©
  console.log('1. V√©rification Firebase CLI...');
  execSync('firebase --version', { stdio: 'inherit' });
  console.log('‚úÖ Firebase CLI install√©\n');
} catch (error) {
  console.error('‚ùå Firebase CLI non install√©. Installez avec: npm install -g firebase-tools\n');
  process.exit(1);
}

try {
  // 2. V√©rifier la configuration des fonctions
  console.log('2. R√©cup√©ration de la configuration Firebase Functions...');
  const config = execSync('firebase functions:config:get', { encoding: 'utf8' });
  console.log('Configuration actuelle:');
  console.log(config);
  
  // Parser la configuration
  const configObj = JSON.parse(config || '{}');
  
  // 3. V√©rifier la cl√© OpenAI
  if (configObj.openai && configObj.openai.key) {
    console.log('‚úÖ Cl√© OpenAI configur√©e');
    console.log(`   Longueur: ${configObj.openai.key.length} caract√®res`);
    console.log(`   D√©but: ${configObj.openai.key.substring(0, 7)}...`);
  } else {
    console.error('‚ùå Cl√© OpenAI NON configur√©e dans Firebase Functions');
    console.log('\nüîß Pour configurer la cl√©:');
    console.log('firebase functions:config:set openai.key="sk-..."');
    console.log('firebase deploy --only functions');
  }
  
} catch (error) {
  console.error('‚ùå Erreur lors de la r√©cup√©ration de la configuration');
  console.error('Assurez-vous d\'√™tre connect√©: firebase login');
  console.error('Erreur:', error.message);
}

console.log('\nüìã Prochaines √©tapes:');
console.log('1. Si la cl√© n\'est pas configur√©e:');
console.log('   firebase functions:config:set openai.key="VOTRE_CL√â_OPENAI"');
console.log('2. Red√©ployer les fonctions:');
console.log('   firebase deploy --only functions');
console.log('3. V√©rifier les logs:');
console.log('   firebase functions:log --follow'); 